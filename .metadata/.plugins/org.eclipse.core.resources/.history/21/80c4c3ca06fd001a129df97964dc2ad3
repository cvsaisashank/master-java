package com.semanticsquare.collections;

import java.util.Map;
import java.util.Set;
import java.util.TreeMap;
/* Notes:
 * - TreeMap implements NavigableMap interface and NavigableMap extends SortedMap.
 * - All the methods are simillar to TreeSet, just that in TreeSet, the operations are performed on an element whereas in a TreeMap, the 
 * operations are performed on Keys.
 * - Sorting is done by 
 * */
public class TreeMapDemo {
	  
	  private static void treeMapDemo() {
		System.out.println("\n\nInside treeMapDemo ...");
		TreeMap<String, Integer> map1 = new TreeMap<>();
		map1.put("John", 25);
		map1.put("Raj", 29);
		map1.put("Anita", 23);
		
		System.out.println(map1);	
		
		System.out.println("Iterating using entrySet ...");
		Set<Map.Entry<String, Integer>> mappings = map1.entrySet();
		for (Map.Entry<String, Integer> mapping : mappings) {
			System.out.println("Name: " + mapping.getKey() + ", Age: " + mapping.getValue());
			if (mapping.getKey().equals("John"))
				mapping.setValue(26);	
		}
		System.out.println(map1);
		map1.floorEntry("Raj").setValue(22);
	}
		
	public static void main(String[] args) {
		treeMapDemo();
	}	
}
